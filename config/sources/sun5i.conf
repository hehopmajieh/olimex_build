
source "${BASH_SOURCE%/*}/sunxi_common.inc"

OVERLAY_PREFIX='sun5i-a13'

case $BRANCH in
	default)
	KERNELSOURCE='https://github.com/linux-sunxi/linux-sunxi'
	KERNELBRANCH='branch:sunxi-3.4'
	KERNELDIR='linux-sunxi'
	KERNEL_USE_GCC='> 5.0'
	;;

	 next)
        if [[ $BOARD == olinuxino-a13 ]]; then
                # Override kernel version
                KERNELSOURCE=$MAINLINE_KERNEL_SOURCE
                KERNELBRANCH='branch:linux-5.0.y'
                KERNELPATCHDIR='sunxi-next-olinuxino'
                LINUXCONFIG='linux-sunxi-default'

                # Override u-boot
                BOOTSOURCE=$MAINLINE_UBOOT_SOURCE
		BOOTDIR=$MAINLINE_UBOOT_DIR
		BOOTCONFIG='A13-OLinuXino_defconfig'
        	BOOTBRANCH='tag:v2019.01'
		BOOTSCRIPT="boot-sunxi.cmd:boot.cmd"
		BOOTENV_FILE='sunxi-default.txt'
	        BOOTPATCHDIR='u-boot-olinuxino'
        fi
	
	 if [[ $BOARD == olinuxino-a13c ]]; then
                # Override kernel version
	        KERNELSOURCE=$MAINLINE_KERNEL_SOURCE
                KERNELBRANCH='branch:linux-5.0.y'
                KERNELPATCHDIR='sunxi-next-olinuxino'
                LINUXCONFIG='linux-sunxi-default'

                # Override u-boot
                BOOTSOURCE=$MAINLINE_UBOOT_SOURCE
                BOOTDIR=$MAINLINE_UBOOT_DIR
                BOOTCONFIG='A13-OLinuXino_defconfig'
                BOOTBRANCH='tag:v2019.01'
                BOOTSCRIPT="boot-sunxi.cmd:boot.cmd"
                BOOTENV_FILE='sunxi-default.txt'
                BOOTPATCHDIR='u-boot-olinuxino'
        fi

	
	if [[ $BOARD == olinux-som-a13 ]]; then
                # Override kernel version
                KERNELSOURCE=$MAINLINE_KERNEL_SOURCE
                KERNELBRANCH='branch:linux-5.0.y'
                KERNELPATCHDIR='sunxi-next-olinuxino'
                LINUXCONFIG='linux-sunxi-default'

                # Override u-boot
                BOOTSOURCE=$MAINLINE_UBOOT_SOURCE
                BOOTDIR=$MAINLINE_UBOOT_DIR
                BOOTCONFIG='A13-OLinuXinoM_defconfig'
                BOOTBRANCH='tag:v2019.01'
                BOOTSCRIPT="boot-sunxi.cmd:boot.cmd"
                BOOTENV_FILE='sunxi-default.txt'
                BOOTPATCHDIR='u-boot-olinuxino'
        fi


        GOVERNOR=ondemand

        ASOUND_STATE='asound.state.sun8i-dev'
        ;;

	dev)
	 if [[ $BOARD == olinuxino-a13 ]]; then
                # Override kernel version
                KERNELSOURCE=$MAINLINE_KERNEL_SOURCE
                KERNELBRANCH='branch:linux-5.1-rc2'
                KERNELPATCHDIR='sunxi-next-olinuxino'
                LINUXCONFIG='linux-sunxi-default'

                # Override u-boot
                BOOTSOURCE=$MAINLINE_UBOOT_SOURCE
                BOOTDIR=$MAINLINE_UBOOT_DIR
                BOOTCONFIG='A13-OLinuXino_defconfig'
                BOOTBRANCH='tag:v2019.01'
                BOOTSCRIPT="boot-sunxi.cmd:boot.cmd"
                BOOTENV_FILE='sunxi-default.txt'
                BOOTPATCHDIR='u-boot-olinuxino'
        fi

	GOVERNOR=ondemand
	;;
esac

CPUMIN=480000
CPUMAX=1010000

family_tweaks_s()
{
        if [[ $BOARD == olinuxino-a13 ]]; then

                # Enable serial login on USB-OTG
                mkdir -p $SDCARD/etc/systemd/system/serial-getty@ttyGS0.service.d
                chroot $SDCARD /bin/bash -c "systemctl --no-reload enable serial-getty@ttyGS0.service > /dev/null 2>&1"
                echo "ttyGS0" >> $SDCARD/etc/securetty

                # Enable services
                #chroot $SDCARD /bin/bash -c "systemctl --no-reload enable olinuxino-bluetooth.service >/dev/null 2>&1"
                #chroot $SDCARD /bin/bash -c "systemctl --no-reload enable olinuxino-modules.service >/dev/null 2>&1"

                #if [[ $BRANCH != default ]]; then
                #        # Install power monitor
                #        [[ $BUILD_DESKTOP == yes ]] && chroot $SDCARD /bin/bash -c "apt-get -qq -y install xfce4-power-manager >/dev/null 2>&1"
                #fi

                # Install desktop related packages
                [[ $BUILD_DESKTOP == yes ]] && \
                        chroot $SDCARD /bin/bash -c "apt-get -y -qq install xinput xinput-calibrator onboard >/dev/null 2>&1"

                # Install generic packages
                chroot $SDCARD /bin/bash -c "apt-get -y -qq install mtd-utils python3-pip >/dev/null 2>&1"

                # Install packages from PyPi
                #chroot $SDCARD /bin/bash -c "pip3 install --quiet uboot >/dev/null 2>&1"

                # Add olimex repository
                chroot $SDCARD /bin/bash -c "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 2BE33123120C50F2666530ED09271DCFB6350689 > /dev/null 2>&1"
                chroot $SDCARD /bin/bash -c "echo \"deb http://repository.olimex.com $RELEASE main\" > /etc/apt/sources.list.d/olimex.list"

                # Change console from both to serial
                sed -i "s/console=.*/console=serial/g" $SDCARD/boot/armbianEnv.txt

                # If release is stretch upgrade device-tree-compiler version
                #if [[ $RELEASE == stretch ]]; then
                 #       chroot $SDCARD /bin/bash -c "wget http://ports.ubuntu.com/pool/main/d/device-tree-compiler/device-tree-compiler_1.4.5-3_armhf.deb > /dev/null 2>&1 && \
                 #                               dpkg -i device-tree-compiler_1.4.5-3_armhf.deb > /dev/null 2>&1 && \
                 #                               rm -f device-tree-compiler_1.4.5-3_armhf.deb"
                #fi
        fi
}


family_tweaks_bsp_s()
{
        if [[ $BOARD == olinuxino-a13 ]]; then

                        # Copy scripts
                        install -m 755 $SRC/packages/bsp/olinuxino/usr/bin/touch_calibrator.sh $destination/usr/bin
        fi
}

